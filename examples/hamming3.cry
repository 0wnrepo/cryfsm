import util

main  in = distance3 (unswizzle `{base=2, len=5} in) < 2
valid in = constantBase `{base=2} (unswizzle `{base=2, len=3} in)
grouping = swizzledGrouping `{base=2, nin=3}

distance3 : {a,b} (fin a, a >= 1, Cmp b) => [3][a]b -> [width a]
distance3 [xs, ys, zs] = max xy (max xz yz) where
  xy = distance xs ys
  xz = distance xs zs
  yz = distance ys zs

distance : {a,b} (fin a, a >= 1, Cmp b) => [a]b -> [a]b -> [width a]
distance xs ys = popcount [x != y | x <- xs | y <- ys]

popcount : {a} (fin a, a >= 1) => [a] -> [width a]
popcount xs = sums!0 where
  sums = [0] # [sum + (0 # [x]) | x <- xs | sum <- sums]
